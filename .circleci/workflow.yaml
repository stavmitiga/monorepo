version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.1.0
  docker: circleci/docker@1.5.0
  kubernetes: circleci/kubernetes@1.3.0
  node: circleci/node@5.0
jobs:
  build-docker-image:
    parameters:
      image-name:
        type: string
      pkg-path:
        type: string
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout
      - docker/check:
          registry: ghcr.io
          docker-password: NPM_TOKEN
          docker-username: GITHUB_USER
      - docker/build:
          docker-context: << parameters.pkg-path >>
          image: << pipeline.parameters.github_registry >>/<< parameters.image-name >>
          path: << parameters.pkg-path >>
          tag: $BUILD_VERSION
          extra_build_args: --build-arg NPM_TOKEN=${NPM_TOKEN}
      - docker/push:
          registry: << pipeline.parameters.github_registry >>
          image: << parameters.image-name >>
          tag: $BUILD_VERSION
  build-ts-pkg:
    parameters:
      pkg-path:
        type: string
        default: mycompany
    docker:
      - image: cimg/base:2022.02
    resource_class: medium+
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - docker/check:
          registry: ghcr.io
          docker-password: NPM_TOKEN
          docker-username: GITHUB_USER
      - node/install:
          install-yarn: true
      - node/install-packages:
          pkg-manager: yarn
          app-dir: << parameters.pkg-path >>
      - run:
          command: yarn run lint
          name: Run TypeScript Linter
          working_directory: << parameters.pkg-path >>
      - run:
          command: yarn run build
          name: Run YARN build
          working_directory: << parameters.pkg-path >>
      - when:
          condition:
            or:
              - equal: # Only push the new build NPM pkg when the CI runs for main branch.
                  - main
                  - << pipeline.git.branch >>
          steps:
            - run:
                command: >
                  set -x
                  echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > .npmrc
                  yarn config set version-git-tag false
                  yarn config set version-tag-prefix ""
                  yarn publish --new-version ${BUILD_VERSION}
                name: Run YARN publish
                working_directory: << parameters.pkg-path >>
                environment:
                  NPM_CONFIG_REGISTRY: https://npm.pkg.github.com
executors:
  dind:
    docker:
      - image: docker:latest
        auth:
          username: $DOCKERHUB_PASSWORD
          password: $DOCKERHUB_USER
parameters:
  mitigacloud-logging-modified:
    type: boolean
    default: false
  mitigacloud-logging-path:
    type: string
    default: packages/common/logging
  mitigacloud-secret-modified:
    type: boolean
    default: false
  mitigacloud-secret-path:
    type: string
    default: packages/secret
workflows:
  mitigacloud-logging-flow:
    when:
      or:
        - << pipeline.parameters.mitigacloud-logging-modified >>
    jobs:
      - build-ts-pkg:
          name: "Build: logging"
          pkg-path: << pipeline.parameters.mitigacloud-logging-path >>
  mitigacloud-secret-flow:
    when:
      or:
        - << pipeline.parameters.mitigacloud-secret-modified >>
    jobs:
      - build-ts-pkg:
          name: "Build: secret"
          pkg-path: << pipeline.parameters.mitigacloud-secret-path >>
      - build-docker-image:
          name: "Build docker image: secret"
          requires:
            - "Build: secret"
          image-name: mitigacloud-secret-image
          pkg-path: packages/secret